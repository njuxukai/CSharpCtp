#ifndef CCTP_TRADER_H
#define CCTP_TRADER_H


#ifdef CCTP_EXPORT
#define API_EXPORT __declspec(dllexport)
#else
#define API_EXPORT __declspec(dllimport)
#endif


#include "ThostFtdcTraderApi.h"

#define API_NULLPTR -8888
#define NO_AUTH 0
#define DIRECT_AUTH 1

typedef struct TraderInfo
{
char BrokerID[11];
char UserID[16];
char InvestorID[16];
char Password[41];
char FrontID[101];
char FlowPath[101];
int AuthKind;
char AppID[33];
char AuthCode[17];
int PrivateTopicResumeType;
int PublicTopicResumeType;
}TraderInfo;

typedef void(__cdecl *FuncPtrTradeOnFrontConnected)() ;
typedef void(__cdecl *FuncPtrTradeOnFrontDisconnected)(int nReason) ;
typedef void(__cdecl *FuncPtrTradeOnHeartBeatWarning)(int nTimeLapse) ;
typedef void(__cdecl *FuncPtrTradeOnRspAuthenticate)(CThostFtdcRspAuthenticateField* pRspAuthenticateField, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspUserLogin)(CThostFtdcRspUserLoginField* pRspUserLogin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspUserLogout)(CThostFtdcUserLogoutField* pUserLogout, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspUserPasswordUpdate)(CThostFtdcUserPasswordUpdateField* pUserPasswordUpdate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspTradingAccountPasswordUpdate)(CThostFtdcTradingAccountPasswordUpdateField* pTradingAccountPasswordUpdate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspUserAuthMethod)(CThostFtdcRspUserAuthMethodField* pRspUserAuthMethod, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspGenUserCaptcha)(CThostFtdcRspGenUserCaptchaField* pRspGenUserCaptcha, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspGenUserText)(CThostFtdcRspGenUserTextField* pRspGenUserText, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspOrderInsert)(CThostFtdcInputOrderField* pInputOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspParkedOrderInsert)(CThostFtdcParkedOrderField* pParkedOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspParkedOrderAction)(CThostFtdcParkedOrderActionField* pParkedOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspOrderAction)(CThostFtdcInputOrderActionField* pInputOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQueryMaxOrderVolume)(CThostFtdcQueryMaxOrderVolumeField* pQueryMaxOrderVolume, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspSettlementInfoConfirm)(CThostFtdcSettlementInfoConfirmField* pSettlementInfoConfirm, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspRemoveParkedOrder)(CThostFtdcRemoveParkedOrderField* pRemoveParkedOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspRemoveParkedOrderAction)(CThostFtdcRemoveParkedOrderActionField* pRemoveParkedOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspExecOrderInsert)(CThostFtdcInputExecOrderField* pInputExecOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspExecOrderAction)(CThostFtdcInputExecOrderActionField* pInputExecOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspForQuoteInsert)(CThostFtdcInputForQuoteField* pInputForQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQuoteInsert)(CThostFtdcInputQuoteField* pInputQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQuoteAction)(CThostFtdcInputQuoteActionField* pInputQuoteAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspBatchOrderAction)(CThostFtdcInputBatchOrderActionField* pInputBatchOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspOptionSelfCloseInsert)(CThostFtdcInputOptionSelfCloseField* pInputOptionSelfClose, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspOptionSelfCloseAction)(CThostFtdcInputOptionSelfCloseActionField* pInputOptionSelfCloseAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspCombActionInsert)(CThostFtdcInputCombActionField* pInputCombAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryOrder)(CThostFtdcOrderField* pOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryTrade)(CThostFtdcTradeField* pTrade, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInvestorPosition)(CThostFtdcInvestorPositionField* pInvestorPosition, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryTradingAccount)(CThostFtdcTradingAccountField* pTradingAccount, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInvestor)(CThostFtdcInvestorField* pInvestor, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryTradingCode)(CThostFtdcTradingCodeField* pTradingCode, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInstrumentMarginRate)(CThostFtdcInstrumentMarginRateField* pInstrumentMarginRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInstrumentCommissionRate)(CThostFtdcInstrumentCommissionRateField* pInstrumentCommissionRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryExchange)(CThostFtdcExchangeField* pExchange, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryProduct)(CThostFtdcProductField* pProduct, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInstrument)(CThostFtdcInstrumentField* pInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryDepthMarketData)(CThostFtdcDepthMarketDataField* pDepthMarketData, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQrySettlementInfo)(CThostFtdcSettlementInfoField* pSettlementInfo, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryTransferBank)(CThostFtdcTransferBankField* pTransferBank, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInvestorPositionDetail)(CThostFtdcInvestorPositionDetailField* pInvestorPositionDetail, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryNotice)(CThostFtdcNoticeField* pNotice, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQrySettlementInfoConfirm)(CThostFtdcSettlementInfoConfirmField* pSettlementInfoConfirm, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInvestorPositionCombineDetail)(CThostFtdcInvestorPositionCombineDetailField* pInvestorPositionCombineDetail, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryCFMMCTradingAccountKey)(CThostFtdcCFMMCTradingAccountKeyField* pCFMMCTradingAccountKey, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryEWarrantOffset)(CThostFtdcEWarrantOffsetField* pEWarrantOffset, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInvestorProductGroupMargin)(CThostFtdcInvestorProductGroupMarginField* pInvestorProductGroupMargin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryExchangeMarginRate)(CThostFtdcExchangeMarginRateField* pExchangeMarginRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryExchangeMarginRateAdjust)(CThostFtdcExchangeMarginRateAdjustField* pExchangeMarginRateAdjust, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryExchangeRate)(CThostFtdcExchangeRateField* pExchangeRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQrySecAgentACIDMap)(CThostFtdcSecAgentACIDMapField* pSecAgentACIDMap, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryProductExchRate)(CThostFtdcProductExchRateField* pProductExchRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryProductGroup)(CThostFtdcProductGroupField* pProductGroup, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryMMInstrumentCommissionRate)(CThostFtdcMMInstrumentCommissionRateField* pMMInstrumentCommissionRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryMMOptionInstrCommRate)(CThostFtdcMMOptionInstrCommRateField* pMMOptionInstrCommRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInstrumentOrderCommRate)(CThostFtdcInstrumentOrderCommRateField* pInstrumentOrderCommRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQrySecAgentTradingAccount)(CThostFtdcTradingAccountField* pTradingAccount, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQrySecAgentCheckMode)(CThostFtdcSecAgentCheckModeField* pSecAgentCheckMode, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQrySecAgentTradeInfo)(CThostFtdcSecAgentTradeInfoField* pSecAgentTradeInfo, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryOptionInstrTradeCost)(CThostFtdcOptionInstrTradeCostField* pOptionInstrTradeCost, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryOptionInstrCommRate)(CThostFtdcOptionInstrCommRateField* pOptionInstrCommRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryExecOrder)(CThostFtdcExecOrderField* pExecOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryForQuote)(CThostFtdcForQuoteField* pForQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryQuote)(CThostFtdcQuoteField* pQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryOptionSelfClose)(CThostFtdcOptionSelfCloseField* pOptionSelfClose, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryInvestUnit)(CThostFtdcInvestUnitField* pInvestUnit, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryCombInstrumentGuard)(CThostFtdcCombInstrumentGuardField* pCombInstrumentGuard, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryCombAction)(CThostFtdcCombActionField* pCombAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryTransferSerial)(CThostFtdcTransferSerialField* pTransferSerial, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryAccountregister)(CThostFtdcAccountregisterField* pAccountregister, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspError)(CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRtnOrder)(CThostFtdcOrderField* pOrder) ;
typedef void(__cdecl *FuncPtrTradeOnRtnTrade)(CThostFtdcTradeField* pTrade) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnOrderInsert)(CThostFtdcInputOrderField* pInputOrder, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnOrderAction)(CThostFtdcOrderActionField* pOrderAction, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRtnInstrumentStatus)(CThostFtdcInstrumentStatusField* pInstrumentStatus) ;
typedef void(__cdecl *FuncPtrTradeOnRtnBulletin)(CThostFtdcBulletinField* pBulletin) ;
typedef void(__cdecl *FuncPtrTradeOnRtnTradingNotice)(CThostFtdcTradingNoticeInfoField* pTradingNoticeInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRtnErrorConditionalOrder)(CThostFtdcErrorConditionalOrderField* pErrorConditionalOrder) ;
typedef void(__cdecl *FuncPtrTradeOnRtnExecOrder)(CThostFtdcExecOrderField* pExecOrder) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnExecOrderInsert)(CThostFtdcInputExecOrderField* pInputExecOrder, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnExecOrderAction)(CThostFtdcExecOrderActionField* pExecOrderAction, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnForQuoteInsert)(CThostFtdcInputForQuoteField* pInputForQuote, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRtnQuote)(CThostFtdcQuoteField* pQuote) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnQuoteInsert)(CThostFtdcInputQuoteField* pInputQuote, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnQuoteAction)(CThostFtdcQuoteActionField* pQuoteAction, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRtnForQuoteRsp)(CThostFtdcForQuoteRspField* pForQuoteRsp) ;
typedef void(__cdecl *FuncPtrTradeOnRtnCFMMCTradingAccountToken)(CThostFtdcCFMMCTradingAccountTokenField* pCFMMCTradingAccountToken) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnBatchOrderAction)(CThostFtdcBatchOrderActionField* pBatchOrderAction, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRtnOptionSelfClose)(CThostFtdcOptionSelfCloseField* pOptionSelfClose) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnOptionSelfCloseInsert)(CThostFtdcInputOptionSelfCloseField* pInputOptionSelfClose, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnOptionSelfCloseAction)(CThostFtdcOptionSelfCloseActionField* pOptionSelfCloseAction, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRtnCombAction)(CThostFtdcCombActionField* pCombAction) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnCombActionInsert)(CThostFtdcInputCombActionField* pInputCombAction, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryContractBank)(CThostFtdcContractBankField* pContractBank, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryParkedOrder)(CThostFtdcParkedOrderField* pParkedOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryParkedOrderAction)(CThostFtdcParkedOrderActionField* pParkedOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryTradingNotice)(CThostFtdcTradingNoticeField* pTradingNotice, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryBrokerTradingParams)(CThostFtdcBrokerTradingParamsField* pBrokerTradingParams, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQryBrokerTradingAlgos)(CThostFtdcBrokerTradingAlgosField* pBrokerTradingAlgos, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQueryCFMMCTradingAccountToken)(CThostFtdcQueryCFMMCTradingAccountTokenField* pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRtnFromBankToFutureByBank)(CThostFtdcRspTransferField* pRspTransfer) ;
typedef void(__cdecl *FuncPtrTradeOnRtnFromFutureToBankByBank)(CThostFtdcRspTransferField* pRspTransfer) ;
typedef void(__cdecl *FuncPtrTradeOnRtnRepealFromBankToFutureByBank)(CThostFtdcRspRepealField* pRspRepeal) ;
typedef void(__cdecl *FuncPtrTradeOnRtnRepealFromFutureToBankByBank)(CThostFtdcRspRepealField* pRspRepeal) ;
typedef void(__cdecl *FuncPtrTradeOnRtnFromBankToFutureByFuture)(CThostFtdcRspTransferField* pRspTransfer) ;
typedef void(__cdecl *FuncPtrTradeOnRtnFromFutureToBankByFuture)(CThostFtdcRspTransferField* pRspTransfer) ;
typedef void(__cdecl *FuncPtrTradeOnRtnRepealFromBankToFutureByFutureManual)(CThostFtdcRspRepealField* pRspRepeal) ;
typedef void(__cdecl *FuncPtrTradeOnRtnRepealFromFutureToBankByFutureManual)(CThostFtdcRspRepealField* pRspRepeal) ;
typedef void(__cdecl *FuncPtrTradeOnRtnQueryBankBalanceByFuture)(CThostFtdcNotifyQueryAccountField* pNotifyQueryAccount) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnBankToFutureByFuture)(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnFutureToBankByFuture)(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnRepealBankToFutureByFutureManual)(CThostFtdcReqRepealField* pReqRepeal, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnRepealFutureToBankByFutureManual)(CThostFtdcReqRepealField* pReqRepeal, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnErrRtnQueryBankBalanceByFuture)(CThostFtdcReqQueryAccountField* pReqQueryAccount, CThostFtdcRspInfoField* pRspInfo) ;
typedef void(__cdecl *FuncPtrTradeOnRtnRepealFromBankToFutureByFuture)(CThostFtdcRspRepealField* pRspRepeal) ;
typedef void(__cdecl *FuncPtrTradeOnRtnRepealFromFutureToBankByFuture)(CThostFtdcRspRepealField* pRspRepeal) ;
typedef void(__cdecl *FuncPtrTradeOnRspFromBankToFutureByFuture)(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspFromFutureToBankByFuture)(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRspQueryBankAccountMoneyByFuture)(CThostFtdcReqQueryAccountField* pReqQueryAccount, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) ;
typedef void(__cdecl *FuncPtrTradeOnRtnOpenAccountByBank)(CThostFtdcOpenAccountField* pOpenAccount) ;
typedef void(__cdecl *FuncPtrTradeOnRtnCancelAccountByBank)(CThostFtdcCancelAccountField* pCancelAccount) ;
typedef void(__cdecl *FuncPtrTradeOnRtnChangeAccountByBank)(CThostFtdcChangeAccountField* pChangeAccount) ;


#ifdef __cplusplus
extern "C"
{
#endif

	API_EXPORT int CreateTrader(TraderInfo* trader_info, void** phandler);
	API_EXPORT int ConnectTrader(void* handler);
	API_EXPORT int DisconnectTrader(void* handler);
	API_EXPORT int DestroyTrader(void** phandler);

    API_EXPORT const char* GetTradingDay(void* trader);
    API_EXPORT int SubmitUserSystemInfo(void* trader, CThostFtdcUserSystemInfoField* pUserSystemInfo);
    API_EXPORT int ReqUserLogout(void* trader, CThostFtdcUserLogoutField* pUserLogout, int nRequestID);
    API_EXPORT int ReqUserPasswordUpdate(void* trader, CThostFtdcUserPasswordUpdateField* pUserPasswordUpdate, int nRequestID);
    API_EXPORT int ReqTradingAccountPasswordUpdate(void* trader, CThostFtdcTradingAccountPasswordUpdateField* pTradingAccountPasswordUpdate, int nRequestID);
    API_EXPORT int ReqUserAuthMethod(void* trader, CThostFtdcReqUserAuthMethodField* pReqUserAuthMethod, int nRequestID);
    API_EXPORT int ReqGenUserCaptcha(void* trader, CThostFtdcReqGenUserCaptchaField* pReqGenUserCaptcha, int nRequestID);
    API_EXPORT int ReqGenUserText(void* trader, CThostFtdcReqGenUserTextField* pReqGenUserText, int nRequestID);
    API_EXPORT int ReqUserLoginWithCaptcha(void* trader, CThostFtdcReqUserLoginWithCaptchaField* pReqUserLoginWithCaptcha, int nRequestID);
    API_EXPORT int ReqUserLoginWithText(void* trader, CThostFtdcReqUserLoginWithTextField* pReqUserLoginWithText, int nRequestID);
    API_EXPORT int ReqUserLoginWithOTP(void* trader, CThostFtdcReqUserLoginWithOTPField* pReqUserLoginWithOTP, int nRequestID);
    API_EXPORT int ReqOrderInsert(void* trader, CThostFtdcInputOrderField* pInputOrder, int nRequestID);
    API_EXPORT int ReqParkedOrderInsert(void* trader, CThostFtdcParkedOrderField* pParkedOrder, int nRequestID);
    API_EXPORT int ReqParkedOrderAction(void* trader, CThostFtdcParkedOrderActionField* pParkedOrderAction, int nRequestID);
    API_EXPORT int ReqOrderAction(void* trader, CThostFtdcInputOrderActionField* pInputOrderAction, int nRequestID);
    API_EXPORT int ReqQueryMaxOrderVolume(void* trader, CThostFtdcQueryMaxOrderVolumeField* pQueryMaxOrderVolume, int nRequestID);
    API_EXPORT int ReqSettlementInfoConfirm(void* trader, CThostFtdcSettlementInfoConfirmField* pSettlementInfoConfirm, int nRequestID);
    API_EXPORT int ReqRemoveParkedOrder(void* trader, CThostFtdcRemoveParkedOrderField* pRemoveParkedOrder, int nRequestID);
    API_EXPORT int ReqRemoveParkedOrderAction(void* trader, CThostFtdcRemoveParkedOrderActionField* pRemoveParkedOrderAction, int nRequestID);
    API_EXPORT int ReqExecOrderInsert(void* trader, CThostFtdcInputExecOrderField* pInputExecOrder, int nRequestID);
    API_EXPORT int ReqExecOrderAction(void* trader, CThostFtdcInputExecOrderActionField* pInputExecOrderAction, int nRequestID);
    API_EXPORT int ReqForQuoteInsert(void* trader, CThostFtdcInputForQuoteField* pInputForQuote, int nRequestID);
    API_EXPORT int ReqQuoteInsert(void* trader, CThostFtdcInputQuoteField* pInputQuote, int nRequestID);
    API_EXPORT int ReqQuoteAction(void* trader, CThostFtdcInputQuoteActionField* pInputQuoteAction, int nRequestID);
    API_EXPORT int ReqBatchOrderAction(void* trader, CThostFtdcInputBatchOrderActionField* pInputBatchOrderAction, int nRequestID);
    API_EXPORT int ReqOptionSelfCloseInsert(void* trader, CThostFtdcInputOptionSelfCloseField* pInputOptionSelfClose, int nRequestID);
    API_EXPORT int ReqOptionSelfCloseAction(void* trader, CThostFtdcInputOptionSelfCloseActionField* pInputOptionSelfCloseAction, int nRequestID);
    API_EXPORT int ReqCombActionInsert(void* trader, CThostFtdcInputCombActionField* pInputCombAction, int nRequestID);
    API_EXPORT int ReqQryOrder(void* trader, CThostFtdcQryOrderField* pQryOrder, int nRequestID);
    API_EXPORT int ReqQryTrade(void* trader, CThostFtdcQryTradeField* pQryTrade, int nRequestID);
    API_EXPORT int ReqQryInvestorPosition(void* trader, CThostFtdcQryInvestorPositionField* pQryInvestorPosition, int nRequestID);
    API_EXPORT int ReqQryTradingAccount(void* trader, CThostFtdcQryTradingAccountField* pQryTradingAccount, int nRequestID);
    API_EXPORT int ReqQryInvestor(void* trader, CThostFtdcQryInvestorField* pQryInvestor, int nRequestID);
    API_EXPORT int ReqQryTradingCode(void* trader, CThostFtdcQryTradingCodeField* pQryTradingCode, int nRequestID);
    API_EXPORT int ReqQryInstrumentMarginRate(void* trader, CThostFtdcQryInstrumentMarginRateField* pQryInstrumentMarginRate, int nRequestID);
    API_EXPORT int ReqQryInstrumentCommissionRate(void* trader, CThostFtdcQryInstrumentCommissionRateField* pQryInstrumentCommissionRate, int nRequestID);
    API_EXPORT int ReqQryExchange(void* trader, CThostFtdcQryExchangeField* pQryExchange, int nRequestID);
    API_EXPORT int ReqQryProduct(void* trader, CThostFtdcQryProductField* pQryProduct, int nRequestID);
    API_EXPORT int ReqQryInstrument(void* trader, CThostFtdcQryInstrumentField* pQryInstrument, int nRequestID);
    API_EXPORT int ReqQryDepthMarketData(void* trader, CThostFtdcQryDepthMarketDataField* pQryDepthMarketData, int nRequestID);
    API_EXPORT int ReqQrySettlementInfo(void* trader, CThostFtdcQrySettlementInfoField* pQrySettlementInfo, int nRequestID);
    API_EXPORT int ReqQryTransferBank(void* trader, CThostFtdcQryTransferBankField* pQryTransferBank, int nRequestID);
    API_EXPORT int ReqQryInvestorPositionDetail(void* trader, CThostFtdcQryInvestorPositionDetailField* pQryInvestorPositionDetail, int nRequestID);
    API_EXPORT int ReqQryNotice(void* trader, CThostFtdcQryNoticeField* pQryNotice, int nRequestID);
    API_EXPORT int ReqQrySettlementInfoConfirm(void* trader, CThostFtdcQrySettlementInfoConfirmField* pQrySettlementInfoConfirm, int nRequestID);
    API_EXPORT int ReqQryInvestorPositionCombineDetail(void* trader, CThostFtdcQryInvestorPositionCombineDetailField* pQryInvestorPositionCombineDetail, int nRequestID);
    API_EXPORT int ReqQryCFMMCTradingAccountKey(void* trader, CThostFtdcQryCFMMCTradingAccountKeyField* pQryCFMMCTradingAccountKey, int nRequestID);
    API_EXPORT int ReqQryEWarrantOffset(void* trader, CThostFtdcQryEWarrantOffsetField* pQryEWarrantOffset, int nRequestID);
    API_EXPORT int ReqQryInvestorProductGroupMargin(void* trader, CThostFtdcQryInvestorProductGroupMarginField* pQryInvestorProductGroupMargin, int nRequestID);
    API_EXPORT int ReqQryExchangeMarginRate(void* trader, CThostFtdcQryExchangeMarginRateField* pQryExchangeMarginRate, int nRequestID);
    API_EXPORT int ReqQryExchangeMarginRateAdjust(void* trader, CThostFtdcQryExchangeMarginRateAdjustField* pQryExchangeMarginRateAdjust, int nRequestID);
    API_EXPORT int ReqQryExchangeRate(void* trader, CThostFtdcQryExchangeRateField* pQryExchangeRate, int nRequestID);
    API_EXPORT int ReqQrySecAgentACIDMap(void* trader, CThostFtdcQrySecAgentACIDMapField* pQrySecAgentACIDMap, int nRequestID);
    API_EXPORT int ReqQryProductExchRate(void* trader, CThostFtdcQryProductExchRateField* pQryProductExchRate, int nRequestID);
    API_EXPORT int ReqQryProductGroup(void* trader, CThostFtdcQryProductGroupField* pQryProductGroup, int nRequestID);
    API_EXPORT int ReqQryMMInstrumentCommissionRate(void* trader, CThostFtdcQryMMInstrumentCommissionRateField* pQryMMInstrumentCommissionRate, int nRequestID);
    API_EXPORT int ReqQryMMOptionInstrCommRate(void* trader, CThostFtdcQryMMOptionInstrCommRateField* pQryMMOptionInstrCommRate, int nRequestID);
    API_EXPORT int ReqQryInstrumentOrderCommRate(void* trader, CThostFtdcQryInstrumentOrderCommRateField* pQryInstrumentOrderCommRate, int nRequestID);
    API_EXPORT int ReqQrySecAgentTradingAccount(void* trader, CThostFtdcQryTradingAccountField* pQryTradingAccount, int nRequestID);
    API_EXPORT int ReqQrySecAgentCheckMode(void* trader, CThostFtdcQrySecAgentCheckModeField* pQrySecAgentCheckMode, int nRequestID);
    API_EXPORT int ReqQrySecAgentTradeInfo(void* trader, CThostFtdcQrySecAgentTradeInfoField* pQrySecAgentTradeInfo, int nRequestID);
    API_EXPORT int ReqQryOptionInstrTradeCost(void* trader, CThostFtdcQryOptionInstrTradeCostField* pQryOptionInstrTradeCost, int nRequestID);
    API_EXPORT int ReqQryOptionInstrCommRate(void* trader, CThostFtdcQryOptionInstrCommRateField* pQryOptionInstrCommRate, int nRequestID);
    API_EXPORT int ReqQryExecOrder(void* trader, CThostFtdcQryExecOrderField* pQryExecOrder, int nRequestID);
    API_EXPORT int ReqQryForQuote(void* trader, CThostFtdcQryForQuoteField* pQryForQuote, int nRequestID);
    API_EXPORT int ReqQryQuote(void* trader, CThostFtdcQryQuoteField* pQryQuote, int nRequestID);
    API_EXPORT int ReqQryOptionSelfClose(void* trader, CThostFtdcQryOptionSelfCloseField* pQryOptionSelfClose, int nRequestID);
    API_EXPORT int ReqQryInvestUnit(void* trader, CThostFtdcQryInvestUnitField* pQryInvestUnit, int nRequestID);
    API_EXPORT int ReqQryCombInstrumentGuard(void* trader, CThostFtdcQryCombInstrumentGuardField* pQryCombInstrumentGuard, int nRequestID);
    API_EXPORT int ReqQryCombAction(void* trader, CThostFtdcQryCombActionField* pQryCombAction, int nRequestID);
    API_EXPORT int ReqQryTransferSerial(void* trader, CThostFtdcQryTransferSerialField* pQryTransferSerial, int nRequestID);
    API_EXPORT int ReqQryAccountregister(void* trader, CThostFtdcQryAccountregisterField* pQryAccountregister, int nRequestID);
    API_EXPORT int ReqQryContractBank(void* trader, CThostFtdcQryContractBankField* pQryContractBank, int nRequestID);
    API_EXPORT int ReqQryParkedOrder(void* trader, CThostFtdcQryParkedOrderField* pQryParkedOrder, int nRequestID);
    API_EXPORT int ReqQryParkedOrderAction(void* trader, CThostFtdcQryParkedOrderActionField* pQryParkedOrderAction, int nRequestID);
    API_EXPORT int ReqQryTradingNotice(void* trader, CThostFtdcQryTradingNoticeField* pQryTradingNotice, int nRequestID);
    API_EXPORT int ReqQryBrokerTradingParams(void* trader, CThostFtdcQryBrokerTradingParamsField* pQryBrokerTradingParams, int nRequestID);
    API_EXPORT int ReqQryBrokerTradingAlgos(void* trader, CThostFtdcQryBrokerTradingAlgosField* pQryBrokerTradingAlgos, int nRequestID);
    API_EXPORT int ReqQueryCFMMCTradingAccountToken(void* trader, CThostFtdcQueryCFMMCTradingAccountTokenField* pQueryCFMMCTradingAccountToken, int nRequestID);
    API_EXPORT int ReqFromBankToFutureByFuture(void* trader, CThostFtdcReqTransferField* pReqTransfer, int nRequestID);
    API_EXPORT int ReqFromFutureToBankByFuture(void* trader, CThostFtdcReqTransferField* pReqTransfer, int nRequestID);
    API_EXPORT int ReqQueryBankAccountMoneyByFuture(void* trader, CThostFtdcReqQueryAccountField* pReqQueryAccount, int nRequestID);

    API_EXPORT void RegisterTradeFPOnFrontConnected(void* trader, FuncPtrTradeOnFrontConnected fp);
    API_EXPORT void RegisterTradeFPOnFrontDisconnected(void* trader, FuncPtrTradeOnFrontDisconnected fp);
    API_EXPORT void RegisterTradeFPOnHeartBeatWarning(void* trader, FuncPtrTradeOnHeartBeatWarning fp);
    API_EXPORT void RegisterTradeFPOnRspAuthenticate(void* trader, FuncPtrTradeOnRspAuthenticate fp);
    API_EXPORT void RegisterTradeFPOnRspUserLogin(void* trader, FuncPtrTradeOnRspUserLogin fp);
    API_EXPORT void RegisterTradeFPOnRspUserLogout(void* trader, FuncPtrTradeOnRspUserLogout fp);
    API_EXPORT void RegisterTradeFPOnRspUserPasswordUpdate(void* trader, FuncPtrTradeOnRspUserPasswordUpdate fp);
    API_EXPORT void RegisterTradeFPOnRspTradingAccountPasswordUpdate(void* trader, FuncPtrTradeOnRspTradingAccountPasswordUpdate fp);
    API_EXPORT void RegisterTradeFPOnRspUserAuthMethod(void* trader, FuncPtrTradeOnRspUserAuthMethod fp);
    API_EXPORT void RegisterTradeFPOnRspGenUserCaptcha(void* trader, FuncPtrTradeOnRspGenUserCaptcha fp);
    API_EXPORT void RegisterTradeFPOnRspGenUserText(void* trader, FuncPtrTradeOnRspGenUserText fp);
    API_EXPORT void RegisterTradeFPOnRspOrderInsert(void* trader, FuncPtrTradeOnRspOrderInsert fp);
    API_EXPORT void RegisterTradeFPOnRspParkedOrderInsert(void* trader, FuncPtrTradeOnRspParkedOrderInsert fp);
    API_EXPORT void RegisterTradeFPOnRspParkedOrderAction(void* trader, FuncPtrTradeOnRspParkedOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRspOrderAction(void* trader, FuncPtrTradeOnRspOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRspQueryMaxOrderVolume(void* trader, FuncPtrTradeOnRspQueryMaxOrderVolume fp);
    API_EXPORT void RegisterTradeFPOnRspSettlementInfoConfirm(void* trader, FuncPtrTradeOnRspSettlementInfoConfirm fp);
    API_EXPORT void RegisterTradeFPOnRspRemoveParkedOrder(void* trader, FuncPtrTradeOnRspRemoveParkedOrder fp);
    API_EXPORT void RegisterTradeFPOnRspRemoveParkedOrderAction(void* trader, FuncPtrTradeOnRspRemoveParkedOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRspExecOrderInsert(void* trader, FuncPtrTradeOnRspExecOrderInsert fp);
    API_EXPORT void RegisterTradeFPOnRspExecOrderAction(void* trader, FuncPtrTradeOnRspExecOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRspForQuoteInsert(void* trader, FuncPtrTradeOnRspForQuoteInsert fp);
    API_EXPORT void RegisterTradeFPOnRspQuoteInsert(void* trader, FuncPtrTradeOnRspQuoteInsert fp);
    API_EXPORT void RegisterTradeFPOnRspQuoteAction(void* trader, FuncPtrTradeOnRspQuoteAction fp);
    API_EXPORT void RegisterTradeFPOnRspBatchOrderAction(void* trader, FuncPtrTradeOnRspBatchOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRspOptionSelfCloseInsert(void* trader, FuncPtrTradeOnRspOptionSelfCloseInsert fp);
    API_EXPORT void RegisterTradeFPOnRspOptionSelfCloseAction(void* trader, FuncPtrTradeOnRspOptionSelfCloseAction fp);
    API_EXPORT void RegisterTradeFPOnRspCombActionInsert(void* trader, FuncPtrTradeOnRspCombActionInsert fp);
    API_EXPORT void RegisterTradeFPOnRspQryOrder(void* trader, FuncPtrTradeOnRspQryOrder fp);
    API_EXPORT void RegisterTradeFPOnRspQryTrade(void* trader, FuncPtrTradeOnRspQryTrade fp);
    API_EXPORT void RegisterTradeFPOnRspQryInvestorPosition(void* trader, FuncPtrTradeOnRspQryInvestorPosition fp);
    API_EXPORT void RegisterTradeFPOnRspQryTradingAccount(void* trader, FuncPtrTradeOnRspQryTradingAccount fp);
    API_EXPORT void RegisterTradeFPOnRspQryInvestor(void* trader, FuncPtrTradeOnRspQryInvestor fp);
    API_EXPORT void RegisterTradeFPOnRspQryTradingCode(void* trader, FuncPtrTradeOnRspQryTradingCode fp);
    API_EXPORT void RegisterTradeFPOnRspQryInstrumentMarginRate(void* trader, FuncPtrTradeOnRspQryInstrumentMarginRate fp);
    API_EXPORT void RegisterTradeFPOnRspQryInstrumentCommissionRate(void* trader, FuncPtrTradeOnRspQryInstrumentCommissionRate fp);
    API_EXPORT void RegisterTradeFPOnRspQryExchange(void* trader, FuncPtrTradeOnRspQryExchange fp);
    API_EXPORT void RegisterTradeFPOnRspQryProduct(void* trader, FuncPtrTradeOnRspQryProduct fp);
    API_EXPORT void RegisterTradeFPOnRspQryInstrument(void* trader, FuncPtrTradeOnRspQryInstrument fp);
    API_EXPORT void RegisterTradeFPOnRspQryDepthMarketData(void* trader, FuncPtrTradeOnRspQryDepthMarketData fp);
    API_EXPORT void RegisterTradeFPOnRspQrySettlementInfo(void* trader, FuncPtrTradeOnRspQrySettlementInfo fp);
    API_EXPORT void RegisterTradeFPOnRspQryTransferBank(void* trader, FuncPtrTradeOnRspQryTransferBank fp);
    API_EXPORT void RegisterTradeFPOnRspQryInvestorPositionDetail(void* trader, FuncPtrTradeOnRspQryInvestorPositionDetail fp);
    API_EXPORT void RegisterTradeFPOnRspQryNotice(void* trader, FuncPtrTradeOnRspQryNotice fp);
    API_EXPORT void RegisterTradeFPOnRspQrySettlementInfoConfirm(void* trader, FuncPtrTradeOnRspQrySettlementInfoConfirm fp);
    API_EXPORT void RegisterTradeFPOnRspQryInvestorPositionCombineDetail(void* trader, FuncPtrTradeOnRspQryInvestorPositionCombineDetail fp);
    API_EXPORT void RegisterTradeFPOnRspQryCFMMCTradingAccountKey(void* trader, FuncPtrTradeOnRspQryCFMMCTradingAccountKey fp);
    API_EXPORT void RegisterTradeFPOnRspQryEWarrantOffset(void* trader, FuncPtrTradeOnRspQryEWarrantOffset fp);
    API_EXPORT void RegisterTradeFPOnRspQryInvestorProductGroupMargin(void* trader, FuncPtrTradeOnRspQryInvestorProductGroupMargin fp);
    API_EXPORT void RegisterTradeFPOnRspQryExchangeMarginRate(void* trader, FuncPtrTradeOnRspQryExchangeMarginRate fp);
    API_EXPORT void RegisterTradeFPOnRspQryExchangeMarginRateAdjust(void* trader, FuncPtrTradeOnRspQryExchangeMarginRateAdjust fp);
    API_EXPORT void RegisterTradeFPOnRspQryExchangeRate(void* trader, FuncPtrTradeOnRspQryExchangeRate fp);
    API_EXPORT void RegisterTradeFPOnRspQrySecAgentACIDMap(void* trader, FuncPtrTradeOnRspQrySecAgentACIDMap fp);
    API_EXPORT void RegisterTradeFPOnRspQryProductExchRate(void* trader, FuncPtrTradeOnRspQryProductExchRate fp);
    API_EXPORT void RegisterTradeFPOnRspQryProductGroup(void* trader, FuncPtrTradeOnRspQryProductGroup fp);
    API_EXPORT void RegisterTradeFPOnRspQryMMInstrumentCommissionRate(void* trader, FuncPtrTradeOnRspQryMMInstrumentCommissionRate fp);
    API_EXPORT void RegisterTradeFPOnRspQryMMOptionInstrCommRate(void* trader, FuncPtrTradeOnRspQryMMOptionInstrCommRate fp);
    API_EXPORT void RegisterTradeFPOnRspQryInstrumentOrderCommRate(void* trader, FuncPtrTradeOnRspQryInstrumentOrderCommRate fp);
    API_EXPORT void RegisterTradeFPOnRspQrySecAgentTradingAccount(void* trader, FuncPtrTradeOnRspQrySecAgentTradingAccount fp);
    API_EXPORT void RegisterTradeFPOnRspQrySecAgentCheckMode(void* trader, FuncPtrTradeOnRspQrySecAgentCheckMode fp);
    API_EXPORT void RegisterTradeFPOnRspQrySecAgentTradeInfo(void* trader, FuncPtrTradeOnRspQrySecAgentTradeInfo fp);
    API_EXPORT void RegisterTradeFPOnRspQryOptionInstrTradeCost(void* trader, FuncPtrTradeOnRspQryOptionInstrTradeCost fp);
    API_EXPORT void RegisterTradeFPOnRspQryOptionInstrCommRate(void* trader, FuncPtrTradeOnRspQryOptionInstrCommRate fp);
    API_EXPORT void RegisterTradeFPOnRspQryExecOrder(void* trader, FuncPtrTradeOnRspQryExecOrder fp);
    API_EXPORT void RegisterTradeFPOnRspQryForQuote(void* trader, FuncPtrTradeOnRspQryForQuote fp);
    API_EXPORT void RegisterTradeFPOnRspQryQuote(void* trader, FuncPtrTradeOnRspQryQuote fp);
    API_EXPORT void RegisterTradeFPOnRspQryOptionSelfClose(void* trader, FuncPtrTradeOnRspQryOptionSelfClose fp);
    API_EXPORT void RegisterTradeFPOnRspQryInvestUnit(void* trader, FuncPtrTradeOnRspQryInvestUnit fp);
    API_EXPORT void RegisterTradeFPOnRspQryCombInstrumentGuard(void* trader, FuncPtrTradeOnRspQryCombInstrumentGuard fp);
    API_EXPORT void RegisterTradeFPOnRspQryCombAction(void* trader, FuncPtrTradeOnRspQryCombAction fp);
    API_EXPORT void RegisterTradeFPOnRspQryTransferSerial(void* trader, FuncPtrTradeOnRspQryTransferSerial fp);
    API_EXPORT void RegisterTradeFPOnRspQryAccountregister(void* trader, FuncPtrTradeOnRspQryAccountregister fp);
    API_EXPORT void RegisterTradeFPOnRspError(void* trader, FuncPtrTradeOnRspError fp);
    API_EXPORT void RegisterTradeFPOnRtnOrder(void* trader, FuncPtrTradeOnRtnOrder fp);
    API_EXPORT void RegisterTradeFPOnRtnTrade(void* trader, FuncPtrTradeOnRtnTrade fp);
    API_EXPORT void RegisterTradeFPOnErrRtnOrderInsert(void* trader, FuncPtrTradeOnErrRtnOrderInsert fp);
    API_EXPORT void RegisterTradeFPOnErrRtnOrderAction(void* trader, FuncPtrTradeOnErrRtnOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRtnInstrumentStatus(void* trader, FuncPtrTradeOnRtnInstrumentStatus fp);
    API_EXPORT void RegisterTradeFPOnRtnBulletin(void* trader, FuncPtrTradeOnRtnBulletin fp);
    API_EXPORT void RegisterTradeFPOnRtnTradingNotice(void* trader, FuncPtrTradeOnRtnTradingNotice fp);
    API_EXPORT void RegisterTradeFPOnRtnErrorConditionalOrder(void* trader, FuncPtrTradeOnRtnErrorConditionalOrder fp);
    API_EXPORT void RegisterTradeFPOnRtnExecOrder(void* trader, FuncPtrTradeOnRtnExecOrder fp);
    API_EXPORT void RegisterTradeFPOnErrRtnExecOrderInsert(void* trader, FuncPtrTradeOnErrRtnExecOrderInsert fp);
    API_EXPORT void RegisterTradeFPOnErrRtnExecOrderAction(void* trader, FuncPtrTradeOnErrRtnExecOrderAction fp);
    API_EXPORT void RegisterTradeFPOnErrRtnForQuoteInsert(void* trader, FuncPtrTradeOnErrRtnForQuoteInsert fp);
    API_EXPORT void RegisterTradeFPOnRtnQuote(void* trader, FuncPtrTradeOnRtnQuote fp);
    API_EXPORT void RegisterTradeFPOnErrRtnQuoteInsert(void* trader, FuncPtrTradeOnErrRtnQuoteInsert fp);
    API_EXPORT void RegisterTradeFPOnErrRtnQuoteAction(void* trader, FuncPtrTradeOnErrRtnQuoteAction fp);
    API_EXPORT void RegisterTradeFPOnRtnForQuoteRsp(void* trader, FuncPtrTradeOnRtnForQuoteRsp fp);
    API_EXPORT void RegisterTradeFPOnRtnCFMMCTradingAccountToken(void* trader, FuncPtrTradeOnRtnCFMMCTradingAccountToken fp);
    API_EXPORT void RegisterTradeFPOnErrRtnBatchOrderAction(void* trader, FuncPtrTradeOnErrRtnBatchOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRtnOptionSelfClose(void* trader, FuncPtrTradeOnRtnOptionSelfClose fp);
    API_EXPORT void RegisterTradeFPOnErrRtnOptionSelfCloseInsert(void* trader, FuncPtrTradeOnErrRtnOptionSelfCloseInsert fp);
    API_EXPORT void RegisterTradeFPOnErrRtnOptionSelfCloseAction(void* trader, FuncPtrTradeOnErrRtnOptionSelfCloseAction fp);
    API_EXPORT void RegisterTradeFPOnRtnCombAction(void* trader, FuncPtrTradeOnRtnCombAction fp);
    API_EXPORT void RegisterTradeFPOnErrRtnCombActionInsert(void* trader, FuncPtrTradeOnErrRtnCombActionInsert fp);
    API_EXPORT void RegisterTradeFPOnRspQryContractBank(void* trader, FuncPtrTradeOnRspQryContractBank fp);
    API_EXPORT void RegisterTradeFPOnRspQryParkedOrder(void* trader, FuncPtrTradeOnRspQryParkedOrder fp);
    API_EXPORT void RegisterTradeFPOnRspQryParkedOrderAction(void* trader, FuncPtrTradeOnRspQryParkedOrderAction fp);
    API_EXPORT void RegisterTradeFPOnRspQryTradingNotice(void* trader, FuncPtrTradeOnRspQryTradingNotice fp);
    API_EXPORT void RegisterTradeFPOnRspQryBrokerTradingParams(void* trader, FuncPtrTradeOnRspQryBrokerTradingParams fp);
    API_EXPORT void RegisterTradeFPOnRspQryBrokerTradingAlgos(void* trader, FuncPtrTradeOnRspQryBrokerTradingAlgos fp);
    API_EXPORT void RegisterTradeFPOnRspQueryCFMMCTradingAccountToken(void* trader, FuncPtrTradeOnRspQueryCFMMCTradingAccountToken fp);
    API_EXPORT void RegisterTradeFPOnRtnFromBankToFutureByBank(void* trader, FuncPtrTradeOnRtnFromBankToFutureByBank fp);
    API_EXPORT void RegisterTradeFPOnRtnFromFutureToBankByBank(void* trader, FuncPtrTradeOnRtnFromFutureToBankByBank fp);
    API_EXPORT void RegisterTradeFPOnRtnRepealFromBankToFutureByBank(void* trader, FuncPtrTradeOnRtnRepealFromBankToFutureByBank fp);
    API_EXPORT void RegisterTradeFPOnRtnRepealFromFutureToBankByBank(void* trader, FuncPtrTradeOnRtnRepealFromFutureToBankByBank fp);
    API_EXPORT void RegisterTradeFPOnRtnFromBankToFutureByFuture(void* trader, FuncPtrTradeOnRtnFromBankToFutureByFuture fp);
    API_EXPORT void RegisterTradeFPOnRtnFromFutureToBankByFuture(void* trader, FuncPtrTradeOnRtnFromFutureToBankByFuture fp);
    API_EXPORT void RegisterTradeFPOnRtnRepealFromBankToFutureByFutureManual(void* trader, FuncPtrTradeOnRtnRepealFromBankToFutureByFutureManual fp);
    API_EXPORT void RegisterTradeFPOnRtnRepealFromFutureToBankByFutureManual(void* trader, FuncPtrTradeOnRtnRepealFromFutureToBankByFutureManual fp);
    API_EXPORT void RegisterTradeFPOnRtnQueryBankBalanceByFuture(void* trader, FuncPtrTradeOnRtnQueryBankBalanceByFuture fp);
    API_EXPORT void RegisterTradeFPOnErrRtnBankToFutureByFuture(void* trader, FuncPtrTradeOnErrRtnBankToFutureByFuture fp);
    API_EXPORT void RegisterTradeFPOnErrRtnFutureToBankByFuture(void* trader, FuncPtrTradeOnErrRtnFutureToBankByFuture fp);
    API_EXPORT void RegisterTradeFPOnErrRtnRepealBankToFutureByFutureManual(void* trader, FuncPtrTradeOnErrRtnRepealBankToFutureByFutureManual fp);
    API_EXPORT void RegisterTradeFPOnErrRtnRepealFutureToBankByFutureManual(void* trader, FuncPtrTradeOnErrRtnRepealFutureToBankByFutureManual fp);
    API_EXPORT void RegisterTradeFPOnErrRtnQueryBankBalanceByFuture(void* trader, FuncPtrTradeOnErrRtnQueryBankBalanceByFuture fp);
    API_EXPORT void RegisterTradeFPOnRtnRepealFromBankToFutureByFuture(void* trader, FuncPtrTradeOnRtnRepealFromBankToFutureByFuture fp);
    API_EXPORT void RegisterTradeFPOnRtnRepealFromFutureToBankByFuture(void* trader, FuncPtrTradeOnRtnRepealFromFutureToBankByFuture fp);
    API_EXPORT void RegisterTradeFPOnRspFromBankToFutureByFuture(void* trader, FuncPtrTradeOnRspFromBankToFutureByFuture fp);
    API_EXPORT void RegisterTradeFPOnRspFromFutureToBankByFuture(void* trader, FuncPtrTradeOnRspFromFutureToBankByFuture fp);
    API_EXPORT void RegisterTradeFPOnRspQueryBankAccountMoneyByFuture(void* trader, FuncPtrTradeOnRspQueryBankAccountMoneyByFuture fp);
    API_EXPORT void RegisterTradeFPOnRtnOpenAccountByBank(void* trader, FuncPtrTradeOnRtnOpenAccountByBank fp);
    API_EXPORT void RegisterTradeFPOnRtnCancelAccountByBank(void* trader, FuncPtrTradeOnRtnCancelAccountByBank fp);
    API_EXPORT void RegisterTradeFPOnRtnChangeAccountByBank(void* trader, FuncPtrTradeOnRtnChangeAccountByBank fp);

#ifdef __cplusplus
}
#endif

#endif
