using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Runtime.InteropServices;


namespace CSharpCtp.MdUser
{{
    public class MdUserWrapper : IDisposable
	{{

        public MdUserWrapper(MdUserInfo userInfo)
        {{
            InitDelegates();
            
            MdUserDllWrapper.CreateMdUser(ref userInfo,out m_handler);
            RegisterDelegatesToHandler();
        }}

        ~MdUserWrapper()
        {{
            Dispose(false);
        }}

        private IntPtr m_handler;

        public int Connect()
        {{
            return MdUserDllWrapper.ConnectMdUser(m_handler);
        }}

        public int Disconnect()
        {{
            if (m_handler != IntPtr.Zero)
            {{
                MdUserDllWrapper.DisconnectMdUser(m_handler);
                m_handler = IntPtr.Zero;
            }}
            return 0;
        }}

        protected virtual void Dispose(bool disposing)
        {{
            //use called(release managed object)
            if (disposing) {{ }}
            //Release Unmanaged objects
            if (m_handler != IntPtr.Zero)
            {{
                MdUserDllWrapper.DisconnectMdUser(m_handler);
                m_handler = IntPtr.Zero;
            }}

            if (disposing)
            {{
                GC.SuppressFinalize(this);
            }}
        }}

        public void Dispose()
        {{
            Dispose(true);
        }}

        private void InitDelegates()
        {{
{init_delegates_lines}
        }}

        private void RegisterDelegatesToHandler()
        {{
            if(m_handler != IntPtr.Zero)
            {{
{register_delegates_lines}
            }}
        }}

        #region event
{event_declares}
        #endregion

        #region MdUserApi

		public int SubscribeMarketData(string[] pReqUserLoginField, int nCount)
        {{
            return MdUserDllWrapper.SubscribeMarketData(m_handler, pReqUserLoginField, nCount);
        }}

        public int UnSubscribeMarketData(string[] pReqUserLoginField, int nCount)
        {{
                return MdUserDllWrapper.SubscribeMarketData(m_handler, pReqUserLoginField, nCount);
        }}

        public int SubscribeForQuoteRsp(string[] pReqUserLoginField, int nCount)
        {{
                return MdUserDllWrapper.SubscribeMarketData(m_handler, pReqUserLoginField, nCount);
        }}

        public int UnSubscribeForQuoteRsp(string[] pReqUserLoginField, int nCount)
        {{
                return MdUserDllWrapper.SubscribeMarketData(m_handler, pReqUserLoginField, nCount);
        }}

{mduser_api_functions}
        #endregion

        #region RaiseEvents
{event_fires} 
        #endregion

        #region delegate variables
{delegate_vars}
        #endregion




	}}
}}
